%!PS-Adobe-2.0 EPSF-2.0
%%Title: dl.eps
%%Creator: gnuplot 5.2 patchlevel 2
%%CreationDate: Tue Nov 22 18:06:28 2022
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 482 402
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 482 50 lineto 482 402 lineto 50 402 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (dl.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 2)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Nov 22 18:06:28 2022)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 8640.00 7056.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1608 768 M
6598 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1608 768 M
63 0 V
6535 0 R
-63 0 V
stroke
1464 768 M
[ [(Helvetica) 240.0 0.0 true true 0 (0)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1608 1656 M
3079 0 V
3375 0 R
144 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1608 1656 M
63 0 V
6535 0 R
-63 0 V
stroke
1464 1656 M
[ [(Helvetica) 240.0 0.0 true true 0 (0.00001)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1608 2544 M
6598 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1608 2544 M
63 0 V
6535 0 R
-63 0 V
stroke
1464 2544 M
[ [(Helvetica) 240.0 0.0 true true 0 (0.0001)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1608 3432 M
6598 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1608 3432 M
63 0 V
6535 0 R
-63 0 V
stroke
1464 3432 M
[ [(Helvetica) 240.0 0.0 true true 0 (0.001)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1608 4319 M
6598 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1608 4319 M
63 0 V
6535 0 R
-63 0 V
stroke
1464 4319 M
[ [(Helvetica) 240.0 0.0 true true 0 (0.01)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1608 5207 M
6598 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1608 5207 M
63 0 V
6535 0 R
-63 0 V
stroke
1464 5207 M
[ [(Helvetica) 240.0 0.0 true true 0 (0.1)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1608 6095 M
6598 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1608 6095 M
63 0 V
6535 0 R
-63 0 V
stroke
1464 6095 M
[ [(Helvetica) 240.0 0.0 true true 0 (1)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1608 768 M
0 5327 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1608 768 M
0 63 V
0 5264 R
0 -63 V
stroke
1608 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2928 768 M
0 5327 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2928 768 M
0 63 V
0 5264 R
0 -63 V
stroke
2928 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 10)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4247 768 M
0 5327 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4247 768 M
0 63 V
0 5264 R
0 -63 V
stroke
4247 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 20)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5567 768 M
0 63 V
0 960 R
0 4304 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5567 768 M
0 63 V
0 5264 R
0 -63 V
stroke
5567 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 30)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6886 768 M
0 63 V
0 960 R
0 4304 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6886 768 M
0 63 V
0 5264 R
0 -63 V
stroke
6886 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 40)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
8206 768 M
0 5327 V
stroke
1.000 UL
LTb
LCb setrgbcolor
8206 768 M
0 63 V
0 5264 R
0 -63 V
stroke
8206 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 50)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1608 6095 N
0 -5327 V
6598 0 V
0 5327 V
-6598 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
216 3431 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (Prob of Data Loss)]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
4907 168 M
[ [(Helvetica) 240.0 0.0 true true 0 (disk failures #)]
] -80.0 MCshow
LTb
LCb setrgbcolor
4907 6695 M
[ [(Helvetica) 240.0 0.0 true true 0 (Probability of data loss vs failed disks # for Declustered \(9+1\)/\(9+1\)\))]
] -80.0 MCshow
4907 6455 M
[ [(Helvetica) 240.0 0.0 true true 0 (40 racks, each rack contains 800 disks)]
] -80.0 MCshow
% Begin plot #1
0.000 UP
5.000 UL
LTb
0.00 0.00 1.00 C LCb setrgbcolor
7135 1671 M
[ [(Helvetica) 240.0 0.0 true true 0 (theory 2 racks)]
] -80.0 MRshow
0.000 UP
5.000 UL
LTb
0.00 0.00 1.00 C 7279 1671 M
639 0 V
1872 768 M
132 0 V
132 2023 V
132 561 V
132 378 V
132 288 V
132 232 V
132 192 V
132 163 V
132 140 V
132 120 V
131 105 V
132 91 V
132 80 V
132 68 V
132 59 V
132 50 V
132 43 V
132 36 V
132 29 V
132 24 V
132 20 V
132 15 V
132 12 V
132 9 V
132 7 V
132 5 V
132 4 V
132 2 V
132 2 V
132 1 V
132 1 V
132 1 V
132 0 V
132 0 V
132 0 V
131 0 V
132 1 V
132 0 V
132 0 V
132 0 V
132 0 V
132 0 V
132 0 V
132 0 V
132 0 V
132 0 V
132 0 V
132 0 V
1872 768 CircleF
2004 768 CircleF
2136 2791 CircleF
2268 3352 CircleF
2400 3730 CircleF
2532 4018 CircleF
2664 4250 CircleF
2796 4442 CircleF
2928 4605 CircleF
3060 4745 CircleF
3192 4865 CircleF
3323 4970 CircleF
3455 5061 CircleF
3587 5141 CircleF
3719 5209 CircleF
3851 5268 CircleF
3983 5318 CircleF
4115 5361 CircleF
4247 5397 CircleF
4379 5426 CircleF
4511 5450 CircleF
4643 5470 CircleF
4775 5485 CircleF
4907 5497 CircleF
5039 5506 CircleF
5171 5513 CircleF
5303 5518 CircleF
5435 5522 CircleF
5567 5524 CircleF
5699 5526 CircleF
5831 5527 CircleF
5963 5528 CircleF
6095 5529 CircleF
6227 5529 CircleF
6359 5529 CircleF
6491 5529 CircleF
6622 5529 CircleF
6754 5530 CircleF
6886 5530 CircleF
7018 5530 CircleF
7150 5530 CircleF
7282 5530 CircleF
7414 5530 CircleF
7546 5530 CircleF
7678 5530 CircleF
7810 5530 CircleF
7942 5530 CircleF
8074 5530 CircleF
8206 5530 CircleF
7598 1671 CircleF
% End plot #1
% Begin plot #2
1.500 UP
5.000 UL
LTb
1.00 0.65 0.00 C LCb setrgbcolor
7135 1431 M
[ [(Helvetica) 240.0 0.0 true true 0 (simulator 2 racks)]
] -80.0 MRshow
1.500 UP
5.000 UL
LTb
1.00 0.65 0.00 C 1872 768 CircleF
2004 768 CircleF
2136 2848 CircleF
2268 3364 CircleF
2400 3744 CircleF
2532 4002 CircleF
2664 4253 CircleF
2796 4441 CircleF
2928 4609 CircleF
3060 4736 CircleF
3192 4856 CircleF
3323 4968 CircleF
3455 5063 CircleF
3587 5138 CircleF
3719 5209 CircleF
3851 5274 CircleF
3983 5315 CircleF
4115 5359 CircleF
4247 5390 CircleF
4379 5427 CircleF
4511 5449 CircleF
4643 5472 CircleF
4775 5486 CircleF
4907 5499 CircleF
5039 5501 CircleF
5171 5514 CircleF
5303 5520 CircleF
5435 5528 CircleF
5567 5527 CircleF
5699 5526 CircleF
5831 5526 CircleF
5963 5528 CircleF
6095 5530 CircleF
6227 5529 CircleF
6359 5529 CircleF
6491 5530 CircleF
6622 5528 CircleF
6754 5528 CircleF
6886 5529 CircleF
7018 5529 CircleF
7150 5529 CircleF
7282 5527 CircleF
7414 5529 CircleF
7546 5531 CircleF
7678 5531 CircleF
7810 5526 CircleF
7942 5531 CircleF
8074 5528 CircleF
8206 5532 CircleF
7598 1431 CircleF
% End plot #2
% Begin plot #3
0.000 UP
5.000 UL
LTb
0.00 1.00 0.00 C LCb setrgbcolor
7135 1191 M
[ [(Helvetica) 240.0 0.0 true true 0 (theory 4 racks)]
] -80.0 MRshow
0.000 UP
5.000 UL
LTb
0.00 1.00 0.00 C 7279 1191 M
639 0 V
2136 768 M
132 0 V
132 2208 V
132 503 V
132 334 V
132 255 V
132 207 V
132 174 V
132 150 V
131 131 V
132 117 V
132 105 V
132 95 V
132 86 V
132 78 V
132 72 V
132 66 V
132 60 V
132 56 V
132 51 V
132 47 V
132 43 V
132 39 V
132 37 V
132 33 V
132 31 V
132 28 V
132 26 V
132 23 V
132 22 V
132 20 V
132 18 V
132 16 V
132 15 V
131 14 V
132 12 V
132 11 V
132 10 V
132 10 V
132 8 V
132 8 V
132 7 V
132 6 V
132 5 V
132 6 V
132 4 V
132 4 V
2136 768 CircleF
2268 768 CircleF
2400 2976 CircleF
2532 3479 CircleF
2664 3813 CircleF
2796 4068 CircleF
2928 4275 CircleF
3060 4449 CircleF
3192 4599 CircleF
3323 4730 CircleF
3455 4847 CircleF
3587 4952 CircleF
3719 5047 CircleF
3851 5133 CircleF
3983 5211 CircleF
4115 5283 CircleF
4247 5349 CircleF
4379 5409 CircleF
4511 5465 CircleF
4643 5516 CircleF
4775 5563 CircleF
4907 5606 CircleF
5039 5645 CircleF
5171 5682 CircleF
5303 5715 CircleF
5435 5746 CircleF
5567 5774 CircleF
5699 5800 CircleF
5831 5823 CircleF
5963 5845 CircleF
6095 5865 CircleF
6227 5883 CircleF
6359 5899 CircleF
6491 5914 CircleF
6622 5928 CircleF
6754 5940 CircleF
6886 5951 CircleF
7018 5961 CircleF
7150 5971 CircleF
7282 5979 CircleF
7414 5987 CircleF
7546 5994 CircleF
7678 6000 CircleF
7810 6005 CircleF
7942 6011 CircleF
8074 6015 CircleF
8206 6019 CircleF
7598 1191 CircleF
% End plot #3
% Begin plot #4
1.500 UP
5.000 UL
LTb
0.75 0.50 1.00 C LCb setrgbcolor
7135 951 M
[ [(Helvetica) 240.0 0.0 true true 0 (simulator 4 racks)]
] -80.0 MRshow
1.500 UP
5.000 UL
LTb
0.75 0.50 1.00 C 2136 768 CircleF
2268 768 CircleF
2400 2954 CircleF
2532 3461 CircleF
2664 3817 CircleF
2796 4043 CircleF
2928 4288 CircleF
3060 4448 CircleF
3192 4606 CircleF
3323 4742 CircleF
3455 4845 CircleF
3587 4956 CircleF
3719 5048 CircleF
3851 5142 CircleF
3983 5216 CircleF
4115 5285 CircleF
4247 5348 CircleF
4379 5410 CircleF
4511 5464 CircleF
4643 5517 CircleF
4775 5567 CircleF
4907 5606 CircleF
5039 5649 CircleF
5171 5682 CircleF
5303 5713 CircleF
5435 5745 CircleF
5567 5770 CircleF
5699 5800 CircleF
5831 5824 CircleF
5963 5845 CircleF
6095 5863 CircleF
6227 5882 CircleF
6359 5899 CircleF
6491 5914 CircleF
6622 5930 CircleF
6754 5940 CircleF
6886 5952 CircleF
7018 5961 CircleF
7150 5972 CircleF
7282 5979 CircleF
7414 5987 CircleF
7546 5994 CircleF
7678 6001 CircleF
7810 6006 CircleF
7942 6012 CircleF
8074 6014 CircleF
8206 6019 CircleF
7598 951 CircleF
% End plot #4
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1608 6095 N
0 -5327 V
6598 0 V
0 5327 V
-6598 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
